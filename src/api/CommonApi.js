/**
 * Trulioo JavaScript SDK
 *
 * Package version: 1.0.1
 * Trulioo OpenAPI version: v1
 * Generated by OpenAPI Generator version: 5.0.1
 */

import ApiClient from "../ApiClient";

/**
* Common service.
* @module api/CommonApi
* @version v1
*/
export default class CommonApi {

    /**
    * Constructs a new CommonApi. 
    * @alias module:api/CommonApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Common Ip Info
     * This method returns the client's public IP address.
     * @param {String} mode trial or live
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Object.<String, {String: String}>} and HTTP response
     */
    commonIpInfoWithHttpInfo(mode) {
      let postBody = null;
      // verify the required parameter 'mode' is set
      if (mode === undefined || mode === null) {
        throw new Error("Missing the required parameter 'mode' when calling commonIpInfo");
      }

      let pathParams = {
        'mode': mode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = {'String': 'String'};
      return this.apiClient.callApi(
        '/{mode}/common/v1/ip-info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Common Ip Info
     * This method returns the client's public IP address.
     * @param {String} mode trial or live
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Object.<String, {String: String}>}
     */
    commonIpInfo(mode) {
      return this.commonIpInfoWithHttpInfo(mode)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
